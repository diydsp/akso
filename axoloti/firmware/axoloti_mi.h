#ifndef AXOLOTI_MI_H_
#define AXOLOTI_MI_H_

// Temporary solution for MI deps in patches
// TODO - clean this up

#include "clouds/dsp/frame.h"
#include "braids/parameter_interpolation.h"
#include "braids/resources.h"
#include "clouds/dsp/fx/diffuser.h"
#include "clouds/dsp/granular_processor.h"
#include "clouds/resources.h"
#include "elements/resources.h"
#include "mutable_resources.h"
#include "rings/resources.h"
#include "stmlib/stmlib.h"
#include "stmlib/utils/dsp.h"
#include "stmlib/utils/random.h"
#include "streams/resources.h"
#include "warps/resources.h"
#include "warps/dsp/modulator.h"
#include "clouds/resources.h"
#include "clouds/dsp/parameters.h"
#include "clouds/dsp/pvoc/stft.h"
#include "clouds/dsp/pvoc/frame_transformation.h"
#include "clouds/dsp/pvoc/phase_vocoder.h"
#include "clouds/dsp/looping_sample_player.h"
#include "clouds/dsp/wsola_sample_player.h"
#include "clouds/dsp/correlator.h"
#include "clouds/dsp/audio_buffer.h"
#include "clouds/dsp/grain.h"
#include "clouds/dsp/fx/fx_engine.h"
#include "clouds/dsp/fx/pitch_shifter.h"
#include "clouds/dsp/fx/diffuser.h"
#include "clouds/dsp/fx/reverb.h"
#include "clouds/dsp/mu_law.h"
#include "clouds/dsp/window.h"
#include "clouds/dsp/sample_rate_converter.h"
#include "clouds/dsp/granular_sample_player.h"
#include "clouds/dsp/granular_processor.h"
#include "warps/resources.h"
#include "warps/dsp/parameters.h"
#include "warps/dsp/vocoder.h"
#include "warps/dsp/filter_bank.h"
#include "warps/dsp/quadrature_transform.h"
#include "warps/dsp/limiter.h"
#include "warps/dsp/oscillator.h"
#include "warps/dsp/sample_rate_converter.h"
#include "warps/dsp/sample_rate_conversion_filters.h"
#include "warps/dsp/quadrature_oscillator.h"
#include "warps/dsp/modulator.h"
#include "braids/svf.h"
#include "braids/signature_waveshaper.h"
#include "braids/digital_oscillator.h"
#include "braids/parameter_interpolation.h"
#include "braids/resources.h"
#include "braids/macro_oscillator.h"
#include "braids/analog_oscillator.h"
#include "braids/vco_jitter_source.h"
#include "braids/excitation.h"
#include "braids/envelope.h"
#include "braids/quantizer.h"
#include "braids/quantizer_scales.h"
#include "mutable_resources.h"
#include "streams/svf.h"
#include "streams/vactrol.h"
#include "streams/filter_controller.h"
#include "streams/resources.h"
#include "streams/meta_parameters.h"
#include "streams/compressor.h"
#include "streams/lorenz_generator.h"
#include "streams/follower.h"
#include "streams/processor.h"
#include "streams/envelope.h"
#include "streams/audio_cv_meter.h"
#include "streams/gain.h"
#include "stmlib/algorithms/note_stack.h"
#include "stmlib/algorithms/voice_allocator.h"
#include "stmlib/algorithms/pattern_predictor.h"
#include "stmlib/algorithms/tiny_map.h"
#include "stmlib/utils/buffer_allocator.h"
#include "stmlib/utils/stream_buffer.h"
#include "stmlib/utils/crc32.h"
#include "stmlib/utils/murmurhash3.h"
#include "stmlib/utils/dsp.h"
#include "stmlib/utils/ring_buffer.h"
#include "stmlib/utils/random.h"
#include "stmlib/fft/shy_fft.h"
#include "stmlib/dsp/cosine_oscillator.h"
#include "stmlib/dsp/parameter_interpolator.h"
#include "stmlib/dsp/filter.h"
#include "stmlib/dsp/atan.h"
#include "stmlib/dsp/rsqrt.h"
#include "stmlib/dsp/limiter.h"
#include "stmlib/dsp/units.h"
#include "stmlib/dsp/dsp.h"
#include "stmlib/dsp/hysteresis_quantizer.h"
#include "stmlib/dsp/delay_line.h"
#include "stmlib/stmlib.h"
#include "rings/resources.h"
#include "rings/dsp/fm_voice.h"
#include "rings/dsp/patch.h"
#include "rings/dsp/string_synth_voice.h"
#include "rings/dsp/plucker.h"
#include "rings/dsp/follower.h"
#include "rings/dsp/string_synth_oscillator.h"
#include "rings/dsp/performance_state.h"
#include "rings/dsp/string.h"
#include "rings/dsp/note_filter.h"
#include "rings/dsp/resonator.h"
#include "rings/dsp/limiter.h"
#include "rings/dsp/string_synth_envelope.h"
#include "rings/dsp/dsp.h"
#include "rings/dsp/onset_detector.h"
#include "elements/resources.h"
#include "elements/dsp/exciter.h"
#include "elements/dsp/multistage_envelope.h"
#include "elements/dsp/patch.h"
#include "elements/dsp/part.h"
#include "elements/dsp/ominous_voice.h"
#include "elements/dsp/voice.h"
#include "elements/dsp/string.h"
#include "elements/dsp/resonator.h"
#include "elements/dsp/fx/fx_engine.h"
#include "elements/dsp/fx/diffuser.h"
#include "elements/dsp/fx/reverb.h"
#include "elements/dsp/tube.h"
#include "elements/dsp/dsp.h"
#include <algorithm>

extern "C" bool loadElementsData(int idx, const char* file, int16_t sample_array[], int size);

#endif
